{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hu-Bao",
    "description": "Java、Python、Go、Ruby、Lua",
    "home_page_url": "https://hubao-1125.github.io",
    "items": [
        {
            "id": "https://hubao-1125.github.io/2021/06/17/%E4%BB%A3%E7%90%86/%E7%88%AC%E5%A2%99%E5%A4%B4%E5%90%8E%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8powershell-windows10-%E6%88%96%E8%80%85iterm-mac-os-%E6%84%89%E5%BF%AB%E7%9A%84%E5%90%8C%E6%80%A7%E4%BA%A4%E5%8F%8B/",
            "url": "https://hubao-1125.github.io/2021/06/17/%E4%BB%A3%E7%90%86/%E7%88%AC%E5%A2%99%E5%A4%B4%E5%90%8E%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8powershell-windows10-%E6%88%96%E8%80%85iterm-mac-os-%E6%84%89%E5%BF%AB%E7%9A%84%E5%90%8C%E6%80%A7%E4%BA%A4%E5%8F%8B/",
            "title": "爬墙头后无法使用PowerShell(windows10)或者iterm(Mac OS)愉快的同性交友",
            "date_published": "2021-06-17T11:36:27.000Z",
            "content_html": "<p>最近遇到了个问题，就是明明翻过了墙头，无论用 <code>PowerShell</code>  还是 <code>iterm</code> ，通过命令行来愉快的同性交友。就是各种 <code>443</code>  或者 <code>Timed out</code> 。仔细的翻了下，找到了解决办法，分享给大家。</p>\n<h1 id=\"mac\"><a class=\"markdownIt-Anchor\" href=\"#mac\">#</a> Mac</h1>\n<p>非 <code>root</code>  用户下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>在文件里面添加以下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export https_proxy=http://127.0.0.1:7890</span><br><span class=\"line\">export http_proxy=http://127.0.0.1:7890</span><br><span class=\"line\">export all_proxy=socks5://127.0.0.1:7890</span><br></pre></td></tr></table></figure>\n<p>退出编辑后， <code>source</code>  一下即可。</p>\n<p><code>root</code>  用户下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>在文件里面添加以下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export https_proxy=http://127.0.0.1:7890</span><br><span class=\"line\">export http_proxy=http://127.0.0.1:7890</span><br><span class=\"line\">export all_proxy=socks5://127.0.0.1:7890</span><br></pre></td></tr></table></figure>\n<p>退出编辑后， <code>source</code>  一下即可。</p>\n<p>PS: 我的 <code>Mac</code>  在 <code>root</code>  下是没有 <code>.zshrc</code>  文件的，我是自己手动在 <code>~/</code>  目录下创建的。如果没有的老铁们可以参考一下我的做法。还有就是上面的 <code>7890</code>  端口，这个端口是我的梯子用的端口，并不是都是 <code>7890</code>  端口的。这一点尤为注意。</p>\n<h1 id=\"windows-powershell\"><a class=\"markdownIt-Anchor\" href=\"#windows-powershell\">#</a> Windows PowerShell</h1>\n<p>在 <code>windows</code>  下，场景又变的不一样了。</p>\n<p><code>windows</code>  自带的终端我是没有使用的。</p>\n<p>我是在 <code>Microsoft Store</code>  里面安装的 <code>Power Shell</code> ，这个怎么设置代理呢。</p>\n<p>需要在 <code>我的电脑</code> 的 <code>文档</code> 里面找到一个文件夹，这个文件夹可能叫 <code>PowerShell</code>  也可能叫 <code>WindowsPowerShell</code> 。</p>\n<p>在文件夹里面创建一个文件 <code>Microsoft.PowerShell_profile.ps1</code></p>\n<p>在文件里面添加如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">env:HTTPS_PROXY=<span class=\"string\">&quot;http://127.0.0.1:52091&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">env:HTTP_PROXY=<span class=\"string\">&quot;http://127.0.0.1:52091&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">env:all_proxy=<span class=\"string\">&quot;socks5://127.0.0.1:52092&quot;</span></span></span><br></pre></td></tr></table></figure>\n<p>不需要像 <code>Mac</code>  一样 <code>source</code> ，直接保存退出，重启 <code>Power Shell</code>  即可。</p>\n<p>嗯，享受伟大的同性交友吧～～～</p>\n",
            "tags": [
                "Shell",
                "proxy",
                "代理"
            ]
        },
        {
            "id": "https://hubao-1125.github.io/2021/06/17/uncategorized/hello-world/",
            "url": "https://hubao-1125.github.io/2021/06/17/uncategorized/hello-world/",
            "title": "Hello World",
            "date_published": "2021-06-17T11:29:25.868Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        },
        {
            "id": "https://hubao-1125.github.io/2021/06/12/oversea/%E8%84%B8%E4%B9%A6%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E5%AF%B9%E6%8E%A5%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89/",
            "url": "https://hubao-1125.github.io/2021/06/12/oversea/%E8%84%B8%E4%B9%A6%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E5%AF%B9%E6%8E%A5%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89/",
            "title": "脸书三方登录对接（后端）",
            "date_published": "2021-06-12T08:55:07.000Z",
            "content_html": "<p>嗯，接之前写的谷歌对接，这次是脸书对接。对接脸书也是挺难的，当时翻遍了脸书的 API 文档，死活没找到相关的，而且是纯英文。最后还是找到了。脸书对接不需要引包，脸书对接是直接发 <code>GET</code>  请求就可以。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String appID = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\">String accessToken = <span class=\"string\">&quot;access_token=&quot;</span>;</span><br><span class=\"line\">String appSecret = <span class=\"string\">&quot;asdasdjajsdjasj&quot;</span>;</span><br><span class=\"line\">String yu = <span class=\"string\">&quot;%7c&quot;</span>;</span><br><span class=\"line\">String inputToken = <span class=\"string\">&quot;input_token=&quot;</span>;</span><br><span class=\"line\">String debugTokenURL = <span class=\"string\">&quot;https://graph.facebook.com/debug_token?&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 拼凑请求参数</span></span><br><span class=\"line\">String reqURL = debugTokenURL + accessToken + appID + yu + appSecret + <span class=\"string\">&quot;&amp;&quot;</span> + inputToken + reqVO.getIDToken();</span><br><span class=\"line\">logger.info(<span class=\"string\">&quot;faceBookCheckIDTokenReq:::&quot;</span> + <span class=\"string\">&quot;:::&quot;</span> + reqURL);</span><br><span class=\"line\">String body = HttpRequest.get(reqURL).timeout(<span class=\"number\">5000</span>).execute().body();</span><br><span class=\"line\">logger.info(<span class=\"string\">&quot;faceBookCheckIDTokenRes:::&quot;</span> + <span class=\"string\">&quot;:::&quot;</span> + body);</span><br><span class=\"line\">JSONObject jsonObject = JSON.parseObject(body);</span><br><span class=\"line\">JSONObject data = jsonObject.getJSONObject(<span class=\"string\">&quot;data&quot;</span>);</span><br><span class=\"line\">Boolean is_valid = data.getBoolean(<span class=\"string\">&quot;is_valid&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (is_valid == <span class=\"keyword\">null</span> || !is_valid) &#123;</span><br><span class=\"line\">    logger.info(<span class=\"number\">400</span>, <span class=\"string\">&quot;ID Token valid fail&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>脸书校验 <code>token</code>  就是一个地址 <code>GET</code>  请求足矣。</p>\n<p User-token=\"\"><a href=\"https://graph.facebook.com/debug_token?access_token=%7BApp-token%7D&amp;input_token=\">https://graph.facebook.com/debug_token?access_token={App-token}&amp;input_token=</a></p>\n<p><code>App-token</code>  其实是 <code>应用ID</code>  与 <code>应用密钥</code> 组成的，中间加个 <code>UrlEncode</code>  后的 <code>|</code>  组成的。</p>\n<p><code>|</code>  在 <code>UrlEncode</code>  后是 <code>%7c</code></p>\n<p><code>User-token</code>  就是前端通过 <code>SDK</code>  获取到的用户 <code>token</code></p>\n<p>比如我的 APPID 是 123，密钥是 456，用户 token 是 789，那么完整的请求地址如下：</p>\n<p><a href=\"https://graph.facebook.com/debug_token?access_token=123%7c456&amp;input_token=789\">https://graph.facebook.com/debug_token?access_token=123|456&amp;input_token=789</a></p>\n<p>就用上面的地址发起 <code>GET</code>  请求就好。我代码里面 <code>HttpRequest</code>  请求起来是不是特别方便？这里安利一波国人开源的 <code>Java</code>  工具 <code>Hutool</code> , 相关地址在下面啦，也算是帮作者推广推广～～～</p>\n<p>官网：<a href=\"https://hutool.cn/\">https://hutool.cn/</a></p>\n<p>Github：<a href=\"https://github.com/dromara/hutool/\">https://github.com/dromara/hutool/</a></p>\n<p>Gitee：<a href=\"https://gitee.com/dromara/hutool/\">https://gitee.com/dromara/hutool/</a></p>\n",
            "tags": [
                "三方登录",
                "Java",
                "oversea",
                "facebook"
            ]
        },
        {
            "id": "https://hubao-1125.github.io/2021/06/12/oversea/%E8%B0%B7%E6%AD%8C%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E5%AF%B9%E6%8E%A5%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89/",
            "url": "https://hubao-1125.github.io/2021/06/12/oversea/%E8%B0%B7%E6%AD%8C%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E5%AF%B9%E6%8E%A5%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89/",
            "title": "谷歌三方登录对接（后端）",
            "date_published": "2021-06-12T08:36:17.000Z",
            "content_html": "<p>最近公司给派任务啦，海外业务线 C 端上要对接 <code>谷歌</code> 与 <code>脸书</code> 的三方对接。于是，我先百度，百度了一圈发现，一个能打的都没有，都是抄，完了还没后端的对接。这就比较烦了，于是花了点时间自己跟前端联调，调通了。在这里分享给大家。</p>\n<p>废话不多说，上代码。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--   google third login api     --&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.google.api-client&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;google-api-client&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.31</span><span class=\"number\">.5</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.google.oauth-client&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;google-oauth-client&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.31</span><span class=\"number\">.5</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.google.http-client&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;google-http-client&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.39</span><span class=\"number\">.0</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">2.8</span><span class=\"number\">.6</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">2.12</span><span class=\"number\">.0</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.google.code.findbugs&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;jsr305&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">3.0</span><span class=\"number\">.2</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.google.protobuf&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;protobuf-java&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">3.15</span><span class=\"number\">.3</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<p>这是用的谷歌官方的一些包。</p>\n<p>官方文档：<a href=\"https://developers.google.com/identity/sign-in/android/start\">https://developers.google.com/identity/sign-in/android/start</a></p>\n<p>谷歌登录是需要各个端的 <code>ClientID</code> ，这个 <code>ClientID</code>  是前后端都需要的。比如，我们是要求 <code>PC</code> 、 <code>安卓</code> 、 <code>IOS</code>  都要对接的，按照谷歌官方文档指引，去创建对应应用以及应用的 <code>ClientID</code>  后要把这些 ID 存起来，如果是 <code>SAAS</code>  系统的话，则需要落库了，我们的海外不是 <code>SAAS</code>  的就直接写死在代码里面了。下面是代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    List&lt;String&gt; clientIDList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// IOS</span></span><br><span class=\"line\">    clientIDList.add(<span class=\"string\">&quot;xxxxxxxxxx.apps.googleusercontent.com&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 安卓</span></span><br><span class=\"line\">    clientIDList.add(<span class=\"string\">&quot;xxxxxxxxxx.apps.googleusercontent.com&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Web Application 这个是给网页用的</span></span><br><span class=\"line\">    clientIDList.add(<span class=\"string\">&quot;xxxxxxxxxx.apps.googleusercontent.com&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        GoogleIdTokenVerifier verifier = <span class=\"keyword\">new</span> GoogleIdTokenVerifier.Builder(<span class=\"keyword\">new</span> NetHttpTransport(), \t\t   GsonFactory.getDefaultInstance())</span><br><span class=\"line\">                .setAudience(clientIDList)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"><span class=\"comment\">// verifier这个对象别打印，打印会报错</span></span><br><span class=\"line\">        GoogleIdToken idToken = verifier.verify(reqVO.getIDToken());</span><br><span class=\"line\">        logger.info(<span class=\"string\">&quot;googleVerifyRes:::&quot;</span> + <span class=\"string\">&quot;:::&quot;</span> + JSON.toJSONString(idToken));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (idToken != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            GoogleIdToken.Payload payload = idToken.getPayload();</span><br><span class=\"line\">            logger.info(<span class=\"string\">&quot;googleGoogleIdToken.Payload:::&quot;</span> + <span class=\"string\">&quot;:::&quot;</span> + JSON.toJSONString(payload));</span><br><span class=\"line\">            <span class=\"comment\">// 用户在谷歌的唯一ID</span></span><br><span class=\"line\">            String userId = payload.getSubject();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;User ID: &quot;</span> + userId);</span><br><span class=\"line\">            <span class=\"comment\">// 用户的邮箱</span></span><br><span class=\"line\">            String email = payload.getEmail();</span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> emailVerified = Boolean.valueOf(payload.getEmailVerified());</span><br><span class=\"line\">            <span class=\"comment\">// 用户的姓名</span></span><br><span class=\"line\">            String name = (String) payload.get(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 用户在谷歌的头像地址</span></span><br><span class=\"line\">            String pictureUrl = (String) payload.get(<span class=\"string\">&quot;picture&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 用户的所在地</span></span><br><span class=\"line\">            String locale = (String) payload.get(<span class=\"string\">&quot;locale&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 用户的家人姓名</span></span><br><span class=\"line\">            String familyName = (String) payload.get(<span class=\"string\">&quot;family_name&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 用户的教名</span></span><br><span class=\"line\">            String givenName = (String) payload.get(<span class=\"string\">&quot;given_name&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            logger.info(<span class=\"string\">&quot;ID Token valid fail&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>有了 <code>pom</code>  的引用包跟上面的代码，就足够了，这个主要是前端传递给后端用户的 ID 令牌，后端校验是否是一个合法的用户，得到用户的 <code>user_id</code>  跟 <code>picture</code>  就可以跟我们的业务的用户信息做处理了。嗯，就挺简单的，趟坑简直了！！！</p>\n",
            "tags": [
                "google",
                "三方登录",
                "Java",
                "oversea"
            ]
        },
        {
            "id": "https://hubao-1125.github.io/2021/05/03/Hexo/buildhexoshoka/",
            "url": "https://hubao-1125.github.io/2021/05/03/Hexo/buildhexoshoka/",
            "title": "buildHexoShoka",
            "date_published": "2021-05-03T14:50:10.000Z",
            "content_html": "<h1 id=\"shoka-hexo插件\"><a class=\"markdownIt-Anchor\" href=\"#shoka-hexo插件\">#</a>  <code>shoka</code>   <code>hexo</code>  插件</h1>\n<p>1、</p>\n<p><a href=\"https://github.com/amehime/hexo-renderer-multi-markdown-it\">https://github.com/amehime/hexo-renderer-multi-markdown-it</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm un hexo-renderer-marked --save</span><br><span class=\"line\"></span><br><span class=\"line\">npm i hexo-renderer-multi-markdown-it --save</span><br></pre></td></tr></table></figure>\n<p>2、</p>\n<p><a href=\"https://github.com/hexojs/hexo-autoprefixer\">https://github.com/hexojs/hexo-autoprefixer</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-autoprefixer --save</span><br></pre></td></tr></table></figure>\n<p>3、</p>\n<p><a href=\"https://github.com/LouisBarranqueiro/hexo-algoliasearch\">https://github.com/LouisBarranqueiro/hexo-algoliasearch</a></p>\n<p><a href=\"https://www.algolia.com/\">https://www.algolia.com/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-algoliasearch --save</span><br></pre></td></tr></table></figure>\n<p>4、</p>\n<p><a href=\"https://github.com/theme-next/hexo-symbols-count-time\">https://github.com/theme-next/hexo-symbols-count-time</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure>\n<p>5、</p>\n<p><a href=\"https://github.com/sergeyzwezdin/hexo-feed\">https://github.com/sergeyzwezdin/hexo-feed</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-feed --save-dev</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "shoka",
                "Hexo"
            ]
        }
    ]
}